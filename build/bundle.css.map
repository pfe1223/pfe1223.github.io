{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../ListView.svelte",
    "../../DefinitionView.svelte",
    "../../NavArea.svelte",
    "../../Presentation.svelte",
    "../../Kahoot.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from \"svelte\";\n\timport ListView from './ListView.svelte';\n\timport NavArea from './NavArea.svelte';\n\timport DefinitionView from './DefinitionView.svelte';\n\timport Presentation from './Presentation.svelte';\n\timport Kahoot from './Kahoot.svelte';\n\n\t// URL for data in Google Spreadsheet\n\tconst url = URL;\n\t\n\t// variables\t\n\tlet data = []; // raw data taken from the Google Spreadsheet\n\tlet words = []; // just the words taken from the Google Spreadsheet\n\tlet listView = true; // controls list view of definition view\n\tlet definition = \"\"; // defintion to be shown on screen\n\tlet clickedWord = \"\"; // word to be shown on screen\n\tlet id = 0; // id of the word that has been clicked\n\tlet page = 1; //determines which page is shown: 1 is dictionary, 2 is presentation, 3 is Kahoot\n\n\t// helper functions\n\n\t// remove extraneous info and create an object with id, word, and definition\n\t// id will default to 0 for now\n\tfunction cleanUpData() {\n\t\twords = data.map(item => ({id: 0, word: item.gsx$word.$t, definition: item.gsx$definition.$t}));\n\t}\n\n\t// sort the list of words alphabetically\n\tfunction sortWords() {\n\t\twords.sort((a, b) => (a.word > b.word) ? 1 : -1)\n\t}\n\n\t// unique id for each object starting at 1\n\tfunction addIds() {\n\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\twords[i].id = i;\n\t\t}\n\t}\n\n\t// go back a page\n\tfunction prevPage() {\n\t\tif (page > 1) {\n\t\t\tpage--;\n\t\t}\n\t}\n\n\t// go forward a page\n\tfunction nextPage() {\n\t\tif (page < 3) {\n\t\t\tpage++;\n\t\t}\n\t}\n\n\tonMount(async () => {\n\t\tconst response = await fetch(url);\n\t\tconst json = await response.json();\n\t\tdata = json.feed.entry;\n\t\tcleanUpData();\n\t\tsortWords();\n\t\taddIds();\n\t});\n</script>\n\n<main>\n\t\t<h1>CS Vocabulary</h1>\n\t\t{#if listView}\n\t\t\t<ListView words={words} \n\t\t\t\tbind:id={id}\n\t\t\t\tbind:listView={listView}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<NavArea \n\t\t\t\tbind:listView={listView} \n\t\t\t\tbind:id={id} \n\t\t\t\twords={words}\n\t\t\t/>\n\t\t\t<DefinitionView \n\t\t\t\tid={id}\n\t\t\t\twords={words}\n\t\t\t/>\n\t\t{/if}\n</main>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Karla&display=swap');\n\n\tmain {\n\t\twidth: 100%;\n\t\tmargin: auto;\n\t}\n\n\t#pageButtons {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\n\tspan {\n\t\tfont-family: 'Karla', sans-serif;\n\t\tcolor: black;\n\t}\n\n\tspan:hover {\n\t\tcursor: default;\n\t\tcolor: #e74c3c;\n\t}\n\n\th1 {\n\t\ttext-align: center;\n\t\tfont-family: 'Karla', sans-serif;\n\t\tcolor: #e74c3c;\n\t\tfont-size: 96px;\n\t}\n</style>\n",
    "<script>\n\texport let words;\n\texport let id;\n\texport let listView;\n\n\tlet wordsToShow = [];\n\tlet search = \"\";\n\n\t$: {\n\t\twordsToShow = words.filter( (obj) => {\n\t\t\treturn obj.word.toLowerCase().indexOf(search) !== -1;\n\t\t});\n\t}\n\n\t// find id of the word that was clicked on\n\tfunction findId(word) {\n\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\tif (words[i].word === word) {\n\t\t\t\treturn words[i].id;\n\t\t\t}\n\t\t}\n\t}\n\n\t// change to definition view and pass along the id\n\tfunction definitionView(event) {\n\t\tlistView = false;\n\t\tid = findId(event.target.value);\n\t}\n</script>\n\n<div id=\"searchArea\">\n\t<input id=\"searchBox\" bind:value={search} placeholder=\"Search...\">\n</div>\n<div id=\"wordList\">\n\t{#each wordsToShow as word}\n\t\t<button class=\"wordButton\" value={word.word} on:click={definitionView}>{word.word}</button>\n\t{/each}\n</div>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n\t#searchBox {\n\t\tfont-family: 'Montserrat', sans-serif;\n\t\tfont-size: 24px;\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t}\n\n\t#searchArea {\n\t\twidth: 100%;\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.wordButton {\n\t\tfont-family: 'Montserrat', sans-serif;\n\t\twidth: 33%;\n\t\tborder: none;\n\t\tbackground-color: Transparent;\n\t\tfont-size: 36px;\n\t}\n\n\t.wordButton:hover {\n\t\tcolor: #e74c3c;\n\t}\n</style>\n",
    "<script>\n\t// props\n\texport let id;\n\texport let words;\n</script>\n\n<div id=\"definitionArea\">\n\t<h2>{words[id].word}</h2>\n\t<p>{words[id].definition}</p>\n</div>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n\t#definitionArea {\n\t\twidth: 60%;\n\t\tmargin: auto;\n\t}\n\t\n\th2 {\n\t\ttext-align: center;\n\t\tfont-family: 'Montserrat', sans-serif;\n\t\tfont-size: 60px;\n\t}\n\n\tp {\n\t\tfont-family: 'Montserrat', sans-serif;\n\t\tfont-size: 36px;\n\t\ttext-align: left;\n\t\tline-height: 1.5;\n\t}\n</style>\n",
    "<script>\n\t// props\n\texport let listView;\n\texport let id;\n\texport let words;\n\n\t// Images used for icons\n\tconst leftButton = 'images/left-arrow.png';\n\tconst redLeftArrow = 'images/red-left-arrow.png';\n\tconst rightButton = 'images/right-arrow.png';\n\tconst redRightArrow = 'images/red-right-arrow.png';\n\tconst homeButton = 'images/home-icon.png';\n\tconst redHomeButton = 'images/red-home-icon.png';\n\n\t// helper functions\n\tfunction returnToList() {\n\t\tlistView = true;\n\t}\n\n\tfunction prevWord() {\n\t\tid--;\n\t\tif (id < 0) {\n\t\t\tid = words.length - 1;\n\t\t}\n\t}\n\n\tfunction nextWord() {\n\t\tid++;\n\t\tif (id > words.length - 1) {\n\t\t\tid = 0;\n\t\t}\n\t}\n\n\tfunction switchLeftArrowRed(event) {\n\t\tevent.target.src = redLeftArrow;\n\t}\n\n\tfunction switchLeftArrowBlack(event) {\n\t\tevent.target.src = leftButton;\n\t}\n\n\tfunction switchRightArrowRed(event) {\n\t\tevent.target.src = redRightArrow;\n\t}\n\n\tfunction switchRightArrowBlack(event) {\n\t\tevent.target.src = rightButton;\n\t}\n\n\tfunction switchHomeButtonRed(event) {\n\t\tevent.target.src = redHomeButton;\n\t}\n\n\tfunction switchHomeButtonBlack(event) {\n\t\tevent.target.src = homeButton;\n\t}\n</script>\n\n<div id=\"navArea\">\n\t<div id=\"buttonWrapper\">\n\t\t<button\n\t\t\ton:mouseout={switchLeftArrowBlack}\n\t\t\ton:mouseover={switchLeftArrowRed}\n\t\t\ton:click={prevWord}\n\t\t\tclass=\"navButton\"\n\t\t>\n\t\t\t<img src={leftButton} alt=\"left arrow\" />\n\t\t</button>\n\t\n\t\t<button\n\t\t\ton:mouseout={switchHomeButtonBlack} \n\t\t\ton:mouseover={switchHomeButtonRed} \n\t\t\ton:click={returnToList} \n\t\t\tclass=\"navButton\"\n\t\t>\n\t\t\t<img src={homeButton} alt=\"home button\" />\n\t\t</button>\n\n\t\t<button \n\t\t\ton:mouseout={switchRightArrowBlack} \n\t\t\ton:mouseover={switchRightArrowRed} \n\t\t\ton:click={nextWord} \n\t\t\tclass=\"navButton\"\n\t\t>\n\t\t\t<img src={rightButton} alt=\"right arrow\" />\n\t\t</button>\n\t</div>\n</div>\n\n<style>\n\t#navArea {\n\t\twidth: 50%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t\tmargin: auto;\n\t}\n\n\t.navButton {\n\t\tborder: none;\n\t\tbackground-color: Transparent;\n\t\tmargin-left: 5px;\n\t\tmargin-right: 5px;\n\t}\n</style>\n",
    "<iframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQl3wmCpCTkbGr_JvUQOjjFQXzPw2TriXtqCXyH-IEb9awwtik_1c2wYxJ4_fCKqWJd4-7SIF0LHQrI/embed?start=false&loop=false&delayms=3000\" frameborder=\"0\" width=\"1440\" height=\"839\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" title=\"Google Presentation\"></iframe>\n\n<style>\n\tiframe {\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t\tmargin-top: 3%;\n\t}\n</style>\n",
    "<iframe src=\"https://kahoot.it/\" frameborder=\"0\" width=\"1440\" height=\"839\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" title=\"Kahoot Game\"></iframe>\n<div id=\"kahootLink\">\n\t<span>\n\t\t<a href=\"https://kahoot.it\" target=\"_blank\">Fullscreen Kahoot</a>\n\t</span>\n</div>\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n\n\tiframe {\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t\tmargin-top: 3%;\n\t}\n\n\tspan {\n\t\tfont-family: 'Montserrat', sans-serif;\n\t\tfloat:right;\n\t}\n\n\t#kahootLink {\n\t\twidth: 1440px;\n\t\tmargin: auto;\n\t}\n\n\ta:hover {\n\t\tcolor: #e74c3c;\n\t\ttext-decoration: none;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAqFC,QAAQ,IAAI,4DAA4D,CAAC,CAAC,AAE1E,IAAI,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AAiBD,EAAE,cAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,OAAO,CAAC,CAAC,UAAU,CAChC,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,IAAI,AAChB,CAAC;ACxED,QAAQ,IAAI,iEAAiE,CAAC,CAAC,AAE/E,UAAU,cAAC,CAAC,AACX,WAAW,CAAE,YAAY,CAAC,CAAC,UAAU,CACrC,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,AACb,CAAC,AAED,WAAW,cAAC,CAAC,AACZ,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,IAAI,AACpB,CAAC,AAED,WAAW,cAAC,CAAC,AACZ,WAAW,CAAE,YAAY,CAAC,CAAC,UAAU,CACrC,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,WAAW,CAC7B,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,yBAAW,MAAM,AAAC,CAAC,AAClB,KAAK,CAAE,OAAO,AACf,CAAC;ACpDD,QAAQ,IAAI,iEAAiE,CAAC,CAAC,AAE/E,eAAe,eAAC,CAAC,AAChB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACb,CAAC,AAED,EAAE,eAAC,CAAC,AACH,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,YAAY,CAAC,CAAC,UAAU,CACrC,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,CAAC,eAAC,CAAC,AACF,WAAW,CAAE,YAAY,CAAC,CAAC,UAAU,CACrC,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,AACjB,CAAC;AC4DD,QAAQ,cAAC,CAAC,AACT,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,YAAY,CAC7B,MAAM,CAAE,IAAI,AACb,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,WAAW,CAC7B,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,GAAG,AAClB,CAAC;ACnGD,MAAM,eAAC,CAAC,AACP,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,EAAE,AACf,CAAC;ACCD,QAAQ,IAAI,iEAAiE,CAAC,CAAC,AAE/E,MAAM,aAAC,CAAC,AACP,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,EAAE,AACf,CAAC,AAED,IAAI,aAAC,CAAC,AACL,WAAW,CAAE,YAAY,CAAC,CAAC,UAAU,CACrC,MAAM,KAAK,AACZ,CAAC,AAED,WAAW,aAAC,CAAC,AACZ,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,IAAI,AACb,CAAC,AAED,cAAC,MAAM,AAAC,CAAC,AACR,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,IAAI,AACtB,CAAC"
}